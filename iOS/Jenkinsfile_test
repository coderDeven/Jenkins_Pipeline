pipeline {
    agent { label 'deven' }
    environment {
        AD_TYPE = 0
    }
    stages {
        stage('export_path') {
            steps {
                sh 'python3 iOS/Environment/SetupEnv.py'
            }
        }
        // 用于将 Jenkins 参数进行转换. 对于 Jenkins job 的设置要简单不易出错，通过脚本进行相应转换后再使用.
        stage('param_parse') {
            steps {
                script {
                    AD_TYPE = sh "python3 iOS/Params/ParamParse.py -adoption ${ad_option}"
                }
            }
        }
        // 校验 Jenkins 参数与 DDcommon 中参数是否一致.
        stage('param_check') {
            steps {
                sh "python3 iOS/Params/ParamCheck.py ./ddCommon.json ${game_id} ${push_enable} ${firebase_enable}"
            }
        }
        stage('pod_env_setup') {
            steps {
                echo "设置 pod 环境 --> 未完成，待测试"
            }
        }
        stage('fetch_apple_cert_info') {
            steps {
                echo "获取证书信息"
                sh "python3 iOS/AppleCert/AppleCertManager.py ${agent} ${game_id} ${push_enable}"
            }
        }
        stage('aaa') {
            steps {
                echo "good"
            }
        }

        stage('test') {
            steps {
                echo "steps 中 必须有 command, 不能为空"
                // sh "./iOS/Sdebug.sh"
            }
        }
    }

    post {
        always {
            echo "always execution after stages"
        }
        success {
            echo "pipeline execution success"
        }

        failure {
            echo "pipeline execution failed"
        }

    }
}